from scapy.all import sniff, Ether, IP, TCP, UDP

def process_packet(packet):
    """Process and display packet details."""
    print("\n=== Packet Captured ===")
    if packet.haslayer(Ether):
        eth = packet[Ether]
        print(f"Ethernet Frame:\n  Source MAC: {eth.src}\n  Destination MAC: {eth.dst}")
    
    if packet.haslayer(IP):
        ip = packet[IP]
        print(f"IP Packet:\n  Source IP: {ip.src}\n  Destination IP: {ip.dst}\n  Protocol: {ip.proto}")
    
    if packet.haslayer(TCP):
        tcp = packet[TCP]
        print(f"TCP Segment:\n  Source Port: {tcp.sport}\n  Destination Port: {tcp.dport}")
    
    if packet.haslayer(UDP):
        udp = packet[UDP]
        print(f"UDP Segment:\n  Source Port: {udp.sport}\n  Destination Port: {udp.dport}")

def main():
    print("Starting packet sniffer... Press Ctrl+C to stop.")
    try:
        # Sniff packets on the default network interface
        sniff(prn=process_packet, filter="ip", store=0)
    except KeyboardInterrupt:
        print("\nPacket sniffer stopped.")

if __name__ == "__main__":
    main()
